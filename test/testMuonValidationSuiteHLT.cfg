process MuonSuite = {

    source = PoolSource {
        untracked vstring fileNames = { "file:/tmp/jhgoh/ZMM_2_0_6.root" }
    }
    replace PoolSource.fileNames =
    {'/store/relvall/2008/5/4/RelVal-RelValSingleMuPt100-1209247429-IDEAL_V1-2nd/0000/DAB2CC86-EF19-DD11-8189-000423D99BF2.root'}
/*
 {
	'/store/relval/2008/6/22/RelVal-RelValZMM-1213987236-IDEAL_V2-2nd/0004/04666D76-1941-DD11-9549-001617E30E28.root',
	'/store/relval/2008/6/22/RelVal-RelValZMM-1213987236-IDEAL_V2-2nd/0004/1055ECC4-1941-DD11-885D-000423D6B42C.root',
	'/store/relval/2008/6/22/RelVal-RelValZMM-1213987236-IDEAL_V2-2nd/0004/10A36DFE-0141-DD11-8F35-000423D99F3E.root',
	'/store/relval/2008/6/22/RelVal-RelValZMM-1213987236-IDEAL_V2-2nd/0004/1A853C05-1D41-DD11-8F68-0019DB29C620.root'
    }
  */
  
    untracked PSet maxEvents = {untracked int32 input = 100}
    
#    service = MessageLogger
#    {
#	untracked vstring destinations = { "cout" }
#	untracked vstring categories     = { "RecoMuonValidator" }
#	untracked vstring debugModules   = { "recoMuonValidator" }
#	untracked PSet cout = {
#          untracked string threshold = "DEBUG"
#            untracked bool noLineBreaks = true
#            untracked bool noTimeStamps = true
#            untracked PSet preEventProcessing = { untracked int32 limit = 0 }
#            untracked PSet FwkReport = { untracked int32 limit = 0 }
#            untracked PSet FwkJob    = { untracked int32 limit = 0 }
#            untracked PSet default   = { untracked int32 limit = 0 }
#            untracked PSet RecoMuonValidator = { untracked int32 limit = -1}
#	}
#    }
    
    //include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
//    include "Configuration/StandardSequences/data/Services.cff"
    service = DQMStore{ }
    include "Configuration/StandardSequences/data/Geometry.cff"
    include "Configuration/StandardSequences/data/MagneticField.cff"
    include "Configuration/StandardSequences/data/FakeConditions.cff"
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cff" 
    include "Geometry/CommonDetUnit/data/globalTrackingGeometry.cfi"
    include "RecoMuon/DetLayers/data/muonDetLayerGeometry.cfi"
    include "Configuration/StandardSequences/data/Reconstruction.cff"
    
    include "RecoMuon/TrackingTools/data/MuonServiceProxy.cff"

    module cutsTPEfficMu = cutsTPEffic from "Validation/RecoTrack/data/cutsTPEffic.cfi"
    replace cutsTPEfficMu.pdgId = {13, -13}

    # Make the associators
    include "SimTracker/TrackAssociation/data/TrackAssociatorByChi2.cfi"
    include "SimTracker/TrackAssociation/data/TrackAssociatorByHits.cfi"
    include "Validation/RecoMuon/data/TrackAssociatorByPositionDeltaR1.cfi"
    include "Validation/RecoMuon/data/TrackAssociatorByPositionDeltaR2.cfi"

    # make association maps using SimTracker modules
    include "Validation/RecoMuon/data/tpToL3TrackAssociation.cfi"
    include "Validation/RecoMuon/data/tpToL2TrackAssociation.cfi"
    include "SimTracker/TrackAssociation/data/trackingParticleRecoTrackAsssociation.cfi"
    replace trackingParticleRecoTrackAsssociation.label_tr = hltL3Muons:L2Seeded

    # make association maps using SimMuon modules
    include "Validation/RecoMuon/data/tpToL3MuonAssociation.cff"
    include "Validation/RecoMuon/data/tpToL2MuonAssociation.cff"
    //include "Validation/RecoMuon/data/tpToTkMuonAssociation.cff"
    replace tpToL3MuonAssociation.links_exist = false 
    replace tpToL3MuonAssociation.associatorByWire = true 
    replace tpToL3MuonAssociation.simtracksXFTag = mix
    replace tpToL3MuonAssociation.DTsimhitsXFTag = mix:MuonDTHits
    replace tpToL3MuonAssociation.DTdigiTag = muonDTDigis
    replace tpToL3MuonAssociation.DTdigisimlinkTag = muonDTDigis
    replace tpToL3MuonAssociation.CSCsimHitsXFTag = mix:MuonCSCHits
    replace tpToL3MuonAssociation.CSClinksTag = muonCSCDigis:MuonCSCStripDigiSimLinks
    replace tpToL3MuonAssociation.CSCwireLinksTag = muonCSCDigis:MuonCSCWireDigiSimLinks
    replace tpToL3MuonAssociation.RPCsimhitsXFTag = mix:MuonRPCHits
    replace tpToL3MuonAssociation.RPCdigisimlinkTag = muonRPCDigis:RPCDigiSimLink

    replace tpToL2MuonAssociation.links_exist = false 
    replace tpToL2MuonAssociation.associatorByWire = true 
    replace tpToL2MuonAssociation.simtracksXFTag = mix
    replace tpToL2MuonAssociation.DTsimhitsXFTag = mix:MuonDTHits
    replace tpToL2MuonAssociation.DTdigiTag = muonDTDigis
    replace tpToL2MuonAssociation.DTdigisimlinkTag = muonDTDigis
    replace tpToL2MuonAssociation.CSCsimHitsXFTag = mix:MuonCSCHits
    replace tpToL2MuonAssociation.CSClinksTag = muonCSCDigis:MuonCSCStripDigiSimLinks
    replace tpToL2MuonAssociation.CSCwireLinksTag = muonCSCDigis:MuonCSCWireDigiSimLinks
    replace tpToL2MuonAssociation.RPCsimhitsXFTag = mix:MuonRPCHits
    replace tpToL2MuonAssociation.RPCdigisimlinkTag = muonRPCDigis:RPCDigiSimLink

    //replace tpToTkMuonAssociation.links_exist = false 
    //replace tpToTkMuonAssociation.associatorByWire = true 
    //replace tpToTkMuonAssociation.simtracksXFTag = mix
    //replace tpToTkMuonAssociation.DTsimhitsXFTag = mix:MuonDTHits
    //replace tpToTkMuonAssociation.DTdigiTag = muonDTDigis
    //replace tpToTkMuonAssociation.DTdigisimlinkTag = muonDTDigis
    //replace tpToTkMuonAssociation.CSCsimHitsXFTag = mix:MuonCSCHits
    //replace tpToTkMuonAssociation.CSClinksTag = muonCSCDigis:MuonCSCStripDigiSimLinks
    //replace tpToTkMuonAssociation.CSCwireLinksTag = muonCSCDigis:MuonCSCWireDigiSimLinks
    //replace tpToTkMuonAssociation.RPCsimhitsXFTag = mix:MuonRPCHits
    //replace tpToTkMuonAssociation.RPCdigisimlinkTag = muonRPCDigis:RPCDigiSimLink
//--//
    module tpToTkHltMuonAssociation = muonAssociatorByHits from "SimMuon/MCTruth/data/MuonAssociatorByHits.cfi"
    replace tpToTkHltMuonAssociation.tracksTag = hltL3Muons:L2Seeded
    replace tpToTkHltMuonAssociation.SimToReco_useTracker = true
    replace tpToTkHltMuonAssociation.SimToReco_useMuon = false
    replace tpToTkHltMuonAssociation.EfficiencyCut_track = 0.5
    replace tpToTkHltMuonAssociation.PurityCut_track = 0.75
//--//
    
    # run the Validation/RecoTrack/MultiTrackValidator using 
    # the maps made with SimTracker modules
    include "Validation/RecoMuon/data/multiL3TrackValidator.cfi"
    include "Validation/RecoMuon/data/multiL2TrackValidator.cfi"
    include "Validation/RecoTrack/data/MultiTrackValidator.cfi"
    replace multiTrackValidator.label = {hltL3Muons:L2Seeded}
    replace multiTrackValidator.beamSpot = hltOfflineBeamSpot
    replace multiTrackValidator.useFabsEta = true
    replace multiTrackValidator.min = 0
    replace multiTrackValidator.nint = 25
    replace multiTrackValidator.maxpT = 1100
    replace multiTrackValidator.dirName = "RecoMuonV/MultiTrack/"

    # run the Validation/RecoTrack/MultiTrackValidator using 
    # the maps made with SimMuon modules
    module multiL3MuonValidator = multiL3TrackValidator from "Validation/RecoMuon/data/multiL3TrackValidator.cfi"
    replace multiL3MuonValidator.associators = {"TrackAssociatorByHits"}
    replace multiL3MuonValidator.associatormap = tpToL3MuonAssociation
    
    module multiL2MuonValidator = multiL2TrackValidator from "Validation/RecoMuon/data/multiL2TrackValidator.cfi"
    replace multiL2MuonValidator.associators = {"TrackAssociatorByHits"}
    replace multiL2MuonValidator.associatormap = tpToL2MuonAssociation
    
    module multiTkMuonValidator = multiL3TrackValidator from "Validation/RecoMuon/data/multiL3TrackValidator.cfi"
    replace multiTkMuonValidator.label = {hltL3Muons:L2Seeded}
    replace multiTkMuonValidator.associators = {"TrackAssociatorByHits"}
    replace multiTkMuonValidator.associatormap = tpToTkHltMuonAssociation
    
    # run the Validation/RecoMuon/RecoMuonValidator
    include "Validation/RecoMuon/data/L3MuonValidator.cfi"
    include "Validation/RecoMuon/data/L2MuonValidator.cfi"
    replace L3MuonValidator.simLabel = "cutsTPEfficMu"
    replace L2MuonValidator.simLabel = "cutsTPEfficMu"

    # run the Validation/RecoMuon/MuonTrackAnalyzer
    include "Validation/RecoMuon/data/muonAnalyzersHLT.cff"
    
    module MyOut = PoolOutputModule
    {
        untracked string fileName = "validationEDMHLT.root"
        untracked vstring outputCommands = {
            "drop *",
	    "keep *_MEtoEDMConverter_*_*",
            "keep recoTracks_hltL2Muons_*_*",
            "keep recoTracks_hltL3Muons_*_*",
	    "keep *_mergedtruth_MergedTrackTruth_*",
            "keep *_tpToL3TrackAssociation_*_*",
            "keep *_tpToL2TrackAssociation_*_*"
        }
    }

    include "DQMServices/Components/data/MEtoEDMConverter.cfi"

    service = RandomNumberGeneratorService
    {

#     to reproduce events using the RandomEngineStateProducer (source excluded),
#     comment the sourceSeed definition, decomment the following one

         untracked string restoreStateLabel = "randomEngineStateProducer"
#	 untracked uint32 sourceSeed = 123456789 
	 PSet moduleSeeds =
	   {
            untracked uint32 mix        = 12345
            untracked uint32 muonDTDigis = 1234567
            untracked uint32 muonRPCDigis = 1234567
	   }
    }
    module randomEngineStateProducer = RandomEngineStateProducer { }

### DT Digitizer to rebuild the DT DigiSimLinks
    include "SimMuon/DTDigitizer/data/muonDTDigis.cfi"

### RPC Digitizer to rebuild the RPC DigiSimLinks
    include "SimMuon/RPCDigitizer/data/muonRPCDigis.cfi"

### Mixing Module
    include "SimGeneral/MixingModule/data/mixNoPU.cfi"
#
### Tracking Particle
# this is ok for Tracker tracks
    include "SimGeneral/TrackingAnalysis/data/trackingParticles.cfi" 
    replace mergedtruth.TrackerHitLabels = {
        "TrackerHitsPixelBarrelLowTof","TrackerHitsPixelBarrelHighTof",
        "TrackerHitsPixelEndcapLowTof","TrackerHitsPixelEndcapHighTof",
        "TrackerHitsTIBLowTof","TrackerHitsTIBHighTof",
        "TrackerHitsTIDLowTof","TrackerHitsTIDHighTof",
        "TrackerHitsTOBLowTof","TrackerHitsTOBHighTof",
        "TrackerHitsTECLowTof","TrackerHitsTECHighTof",
        "MuonDTHits","MuonCSCHits","MuonRPCHits"
    }
    replace mergedtruth.simHitLabel = ""        
    
    sequence My_trackingParticles = {(mix,trackingParticles,cutsTPEfficMu)}

//    sequence My_associations = {tpToL3TrackAssociation,tpToL2TrackAssociation,trackingParticleRecoTrackAsssociation,tpToL3MuonAssociation,tpToL2MuonAssociation,tpToTkHltMuonAssociation}
    sequence My_associations = {tpToL3TrackAssociation,tpToL2TrackAssociation,tpToL2MuonAssociation}

    path randomNr = {randomEngineStateProducer}

    path My_trackingAnalysis = { My_trackingParticles }

    path My_associatorPath = { My_associations }

    path My_ReDigi = {muonDTDigis,muonRPCDigis}

//    path My_validators = { multiL3TrackValidator & multiL2TrackValidator & multiTrackValidator & multiL3MuonValidator & multiL2MuonValidator & multiTkMuonValidator & L3MuonValidator & L2MuonValidator }
    path My_validators = { multiL3TrackValidator & multiL2TrackValidator & multiL2MuonValidator & L3MuonValidator & L2MuonValidator }

    path My_nonEDMvalidators = { L3MuonTrackAnalyzer & L2MuonTrackAnalyzer }

    path My_MEtoEDM = {MEtoEDMConverter}

    endpath output = {MyOut}
    
    schedule = {randomNr,My_trackingAnalysis,My_ReDigi,My_associatorPath,My_validators, My_MEtoEDM, output}

}

