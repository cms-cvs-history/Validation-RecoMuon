process MuonSuite = {

    source = PoolSource {
        untracked vstring fileNames = { "file:/tmp/jhgoh/ZMM_2_0_6.root" }
    }
    replace PoolSource.fileNames =
    {'/store/relvall/2008/5/4/RelVal-RelValSingleMuPt100-1209247429-IDEAL_V1-2nd/0000/DAB2CC86-EF19-DD11-8189-000423D99BF2.root'}
/*
    {
	'/store/relval/2008/6/22/RelVal-RelValSingleMuPt1000-1213987236-IDEAL_V2-2nd/0003/16CB562E-BB40-DD11-B4D9-000423D6CAF2.root',
	'/store/relval/2008/6/22/RelVal-RelValSingleMuPt1000-1213987236-IDEAL_V2-2nd/0003/8E33662C-B940-DD11-BFDE-001617DBD5AC.root',
	'/store/relval/2008/6/22/RelVal-RelValSingleMuPt1000-1213987236-IDEAL_V2-2nd/0004/04B3F7B0-0241-DD11-B234-000423D99264.root'
    }
*/ 
    untracked PSet maxEvents = {untracked int32 input = 100}

#    service = MessageLogger
#    {
#	untracked vstring destinations = { "cout" }
#	untracked vstring categories     = { "RecoMuonValidator" }
#	untracked vstring debugModules   = { "recoMuonValidator" }
#	untracked PSet cout = {
#          untracked string threshold = "DEBUG"
#            untracked bool noLineBreaks = true
#            untracked bool noTimeStamps = true
#            untracked PSet preEventProcessing = { untracked int32 limit = 0 }
#            untracked PSet FwkReport = { untracked int32 limit = 0 }
#            untracked PSet FwkJob    = { untracked int32 limit = 0 }
#            untracked PSet default   = { untracked int32 limit = 0 }
#            untracked PSet RecoMuonValidator = { untracked int32 limit = -1}
#	}
#    }
    
    //include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
//    include "Configuration/StandardSequences/data/Services.cff"
    service = DQMStore{ }
    include "Configuration/StandardSequences/data/Geometry.cff"
    include "Configuration/StandardSequences/data/MagneticField.cff"
    include "Configuration/StandardSequences/data/FakeConditions.cff"
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cff" 
    include "Geometry/CommonDetUnit/data/globalTrackingGeometry.cfi"
    include "RecoMuon/DetLayers/data/muonDetLayerGeometry.cfi"
    include "Configuration/StandardSequences/data/Reconstruction.cff"
    
    include "RecoMuon/TrackingTools/data/MuonServiceProxy.cff"

    module cutsTPEfficMu = cutsTPEffic from "Validation/RecoTrack/data/cutsTPEffic.cfi"
    replace cutsTPEfficMu.pdgId = {13, -13}

    # Make the associators
    include "SimTracker/TrackAssociation/data/TrackAssociatorByChi2.cfi"
    include "SimTracker/TrackAssociation/data/TrackAssociatorByHits.cfi"
    include "Validation/RecoMuon/data/TrackAssociatorByPositionDeltaR1.cfi"
    include "Validation/RecoMuon/data/TrackAssociatorByPositionDeltaR2.cfi"

    # make association maps using SimTracker modules
    include "Validation/RecoMuon/data/tpToGlbTrackAssociation.cfi"
    include "Validation/RecoMuon/data/tpToStaTrackAssociation.cfi"
    include "SimTracker/TrackAssociation/data/trackingParticleRecoTrackAsssociation.cfi"

    # make association maps using SimMuon modules
    include "Validation/RecoMuon/data/tpToGlbMuonAssociation.cff"
    include "Validation/RecoMuon/data/tpToStaMuonAssociation.cff"
    include "Validation/RecoMuon/data/tpToTkMuonAssociation.cff"
    replace tpToGlbMuonAssociation.links_exist = false 
    replace tpToGlbMuonAssociation.associatorByWire = true 
    replace tpToGlbMuonAssociation.simtracksXFTag = mix
    replace tpToGlbMuonAssociation.DTsimhitsXFTag = mix:MuonDTHits
    replace tpToGlbMuonAssociation.DTdigiTag = muonDTDigis
    replace tpToGlbMuonAssociation.DTdigisimlinkTag = muonDTDigis
    replace tpToGlbMuonAssociation.CSCsimHitsXFTag = mix:MuonCSCHits
    replace tpToGlbMuonAssociation.CSClinksTag = muonCSCDigis:MuonCSCStripDigiSimLinks
    replace tpToGlbMuonAssociation.CSCwireLinksTag = muonCSCDigis:MuonCSCWireDigiSimLinks
    replace tpToGlbMuonAssociation.RPCsimhitsXFTag = mix:MuonRPCHits
    replace tpToGlbMuonAssociation.RPCdigisimlinkTag = muonRPCDigis:RPCDigiSimLink

    replace tpToStaMuonAssociation.links_exist = false 
    replace tpToStaMuonAssociation.associatorByWire = true 
    replace tpToStaMuonAssociation.simtracksXFTag = mix
    replace tpToStaMuonAssociation.DTsimhitsXFTag = mix:MuonDTHits
    replace tpToStaMuonAssociation.DTdigiTag = muonDTDigis
    replace tpToStaMuonAssociation.DTdigisimlinkTag = muonDTDigis
    replace tpToStaMuonAssociation.CSCsimHitsXFTag = mix:MuonCSCHits
    replace tpToStaMuonAssociation.CSClinksTag = muonCSCDigis:MuonCSCStripDigiSimLinks
    replace tpToStaMuonAssociation.CSCwireLinksTag = muonCSCDigis:MuonCSCWireDigiSimLinks
    replace tpToStaMuonAssociation.RPCsimhitsXFTag = mix:MuonRPCHits
    replace tpToStaMuonAssociation.RPCdigisimlinkTag = muonRPCDigis:RPCDigiSimLink

    replace tpToTkMuonAssociation.links_exist = false 
    replace tpToTkMuonAssociation.associatorByWire = true 
    replace tpToTkMuonAssociation.simtracksXFTag = mix
    replace tpToTkMuonAssociation.DTsimhitsXFTag = mix:MuonDTHits
    replace tpToTkMuonAssociation.DTdigiTag = muonDTDigis
    replace tpToTkMuonAssociation.DTdigisimlinkTag = muonDTDigis
    replace tpToTkMuonAssociation.CSCsimHitsXFTag = mix:MuonCSCHits
    replace tpToTkMuonAssociation.CSClinksTag = muonCSCDigis:MuonCSCStripDigiSimLinks
    replace tpToTkMuonAssociation.CSCwireLinksTag = muonCSCDigis:MuonCSCWireDigiSimLinks
    replace tpToTkMuonAssociation.RPCsimhitsXFTag = mix:MuonRPCHits
    replace tpToTkMuonAssociation.RPCdigisimlinkTag = muonRPCDigis:RPCDigiSimLink

    # run the Validation/RecoTrack/MultiTrackValidator using 
    # the maps made with SimTracker modules
    include "Validation/RecoMuon/data/multiGlbTrackValidator.cfi"
    include "Validation/RecoMuon/data/multiStaTrackValidator.cfi"
    include "Validation/RecoTrack/data/MultiTrackValidator.cfi"
    replace multiTrackValidator.useFabsEta = true
    replace multiTrackValidator.min = 0
    replace multiTrackValidator.nint = 25
    replace multiTrackValidator.maxpT = 1100
    replace multiTrackValidator.dirName = "RecoMuonV/MultiTrack/"

    # run the Validation/RecoTrack/MultiTrackValidator using 
    # the maps made with SimMuon modules
    module multiGlbMuonValidator = multiGlbTrackValidator from "Validation/RecoMuon/data/multiGlbTrackValidator.cfi"
    replace multiGlbMuonValidator.associators = {"TrackAssociatorByHits"}
    replace multiGlbMuonValidator.associatormap = tpToGlbMuonAssociation
    
    module multiStaMuonValidator = multiStaTrackValidator from "Validation/RecoMuon/data/multiStaTrackValidator.cfi"
    replace multiStaMuonValidator.associators = {"TrackAssociatorByHits"}
    replace multiStaMuonValidator.associatormap = tpToStaMuonAssociation
    
    module multiTkMuonValidator = multiGlbTrackValidator from "Validation/RecoMuon/data/multiGlbTrackValidator.cfi"
    replace multiTkMuonValidator.label = {generalTracks}
    replace multiTkMuonValidator.associators = {"TrackAssociatorByHits"}
    replace multiTkMuonValidator.associatormap = tpToTkMuonAssociation
    
    # run the Validation/RecoMuon/RecoMuonValidator
    include "Validation/RecoMuon/data/glbMuonValidator.cfi"
    include "Validation/RecoMuon/data/staMuonValidator.cfi"
    replace glbMuonValidator.simLabel = "cutsTPEfficMu"
    replace staMuonValidator.simLabel = "cutsTPEfficMu"

    # run the Validation/RecoMuon/MuonTrackAnalyzer
    include "Validation/RecoMuon/data/muonAnalyzers.cff"

    module MyOut = PoolOutputModule
    {
        untracked string fileName = "validationEDM.root"
        untracked vstring outputCommands = {
            "drop *",
	    "keep *_MEtoEDMConverter_*_*",
            "keep recoTracks_standAloneMuons_*_*",
            "keep recoTracks_globalMuons_*_*",
	    "keep *_mergedtruth_MergedTrackTruth_*",
            "keep *_tpToGlbTrackAssociation_*_*",
            "keep *_tpToStaTrackAssociation_*_*"
        }
    }
    
    include "DQMServices/Components/data/MEtoEDMConverter.cfi"

    service = RandomNumberGeneratorService
    {

#     to reproduce events using the RandomEngineStateProducer (source excluded),
#     comment the sourceSeed definition, decomment the following one

         untracked string restoreStateLabel = "randomEngineStateProducer"
#	 untracked uint32 sourceSeed = 123456789 
	 PSet moduleSeeds =
	   {
            untracked uint32 mix        = 12345
            untracked uint32 muonDTDigis = 1234567
            untracked uint32 muonRPCDigis = 1234567
	   }
    }
    module randomEngineStateProducer = RandomEngineStateProducer { }

### DT Digitizer to rebuild the DT DigiSimLinks
    include "SimMuon/DTDigitizer/data/muonDTDigis.cfi"

### RPC Digitizer to rebuild the RPC DigiSimLinks
    include "SimMuon/RPCDigitizer/data/muonRPCDigis.cfi"
    
### Mixing Module
    include "SimGeneral/MixingModule/data/mixNoPU.cfi"
#
### Tracking Particle
# this is ok for Tracker tracks
    include "SimGeneral/TrackingAnalysis/data/trackingParticles.cfi" 
    replace mergedtruth.TrackerHitLabels = {
        "TrackerHitsPixelBarrelLowTof","TrackerHitsPixelBarrelHighTof",
        "TrackerHitsPixelEndcapLowTof","TrackerHitsPixelEndcapHighTof",
        "TrackerHitsTIBLowTof","TrackerHitsTIBHighTof",
        "TrackerHitsTIDLowTof","TrackerHitsTIDHighTof",
        "TrackerHitsTOBLowTof","TrackerHitsTOBHighTof",
        "TrackerHitsTECLowTof","TrackerHitsTECHighTof",
        "MuonDTHits","MuonCSCHits","MuonRPCHits"
    }
    replace mergedtruth.simHitLabel = ""    
    
    sequence My_trackingParticles = {(mix,trackingParticles,cutsTPEfficMu)}

    sequence My_associations = {tpToGlbTrackAssociation,tpToStaTrackAssociation,trackingParticleRecoTrackAsssociation,tpToGlbMuonAssociation,tpToStaMuonAssociation,tpToTkMuonAssociation}

    path randomNr = {randomEngineStateProducer}

    path My_trackingAnalysis = { My_trackingParticles }

    path My_associatorPath = { My_associations }

    path My_ReDigi = {muonDTDigis,muonRPCDigis}

    path My_validators = { multiGlbTrackValidator & multiStaTrackValidator & multiTrackValidator & multiGlbMuonValidator & multiStaMuonValidator & multiTkMuonValidator & glbMuonValidator & staMuonValidator }

    path My_nonEDMvalidators = { glbMuonTrackAnalyzer & staMuonTrackAnalyzer }

    path My_MEtoEDM = {MEtoEDMConverter}
    
    endpath output = {MyOut}
    
    schedule = {randomNr,My_trackingAnalysis, My_ReDigi, My_associatorPath, My_validators, My_MEtoEDM, output}

}

